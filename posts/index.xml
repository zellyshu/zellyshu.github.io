<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on ZS Log</title>
    <link>https://zellyshu.github.io/posts/</link>
    <description>Recent content in Posts on ZS Log</description>
    <image>
      <url>https://zellyshu.github.io/cover.png</url>
      <link>https://zellyshu.github.io/cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 15 Dec 2021 15:44:35 +0000</lastBuildDate><atom:link href="https://zellyshu.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>사용하는 툴 &amp; 프로그램 정리</title>
      <link>https://zellyshu.github.io/posts/2021-12-15-tool/</link>
      <pubDate>Wed, 15 Dec 2021 15:44:35 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-12-15-tool/</guid>
      <description>Intro 연말을 맞이하여 업무 및 일상에 있어 어떠한 툴과 프로그램들을 사용하고 있는지 현황을 파악해보아야겠다는 생각이 갑자기 들었다. 특히 올해는 생산성 향상이라는 방향에 있어 Product Hunt 및 뉴스레터 등에서 본 많은 툴들을 설치하고 제거하고를 수 없이 반복했기에 이걸 1년마다 최신화를 시킨다면 나중에 보았을 때도 괜찮은 자료로 남지 않을까 싶었다. 간단하게 테이블 형태로 정리해보니 생각보다 많은 양에 놀랐다. 혹여나 누군가에게 도움이 된다면 좋겠다는 생각에 정리 사항을 남겨본다.
2021.12.15 기준    목적 Tool     프로젝트 관리 Notion -&amp;gt; Clickup   메일 클라이언트 Mozilla Thunderbird   Web Browser (업무) Chrome   Web Browser (개인) Firefox   Password Manager Bitwarden Premium   DB DBeaver   API Postman   Markdown Typora (유료화로 인하여 변경) -&amp;gt; Mark Text   SSH Putty -&amp;gt; MobaXterm   SCP WinSCP -&amp;gt; MobaXterm   Image Viewer 꿀뷰   영상편집 뱁믹스   압축파일 반디집   데이터 시각화 Tableau   Cloud Oracle, GCP   Python Coding IDE Pycharm   그 외 Coding IDE VSCode   개인 아카이브 Obsidian   생각 정리 Logseq   Workflow (mac OS) Alfred 4   Workflow (Win) Wox -&amp;gt; Fluent-Search   Clipboard Ditto   파일 및 폴더 검색 Everything   RSS Slack, Feedly   창 분할 (mac OS) Magnet   창 분할 (Win) PowerToys   VPN FortiClient VPN Only   노트 UpNote (Premium)   Font Pretendard   개인 일정 (여행 등) KanbanFlow   일정관리 (Phone) Calendars 5    보류    목적 Tool 보류 이유     프로젝트 관리 JetBrains Space 창이 두 개가 켜지지 않고, 스프린트 기반의 관리가 익숙해지지 않아서    </description>
    </item>
    
    <item>
      <title>macOS에서 작성한 Logseq 내용이 Windows 환경에서 보이지 않을 때 (한글자소분리 이슈)</title>
      <link>https://zellyshu.github.io/posts/2021-11-12-logseq-hanguljaso/</link>
      <pubDate>Fri, 12 Nov 2021 15:44:05 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-11-12-logseq-hanguljaso/</guid>
      <description>Intro 최근 Logseq와 Obsidian을 같이 활용하여 생각을 정리해보고자 하고 있다. 회사에서는 Windows를 사용하지만, 평상시에는 mac OS 및 Apple 생태계의 기기들을 주로 사용하는 나에게 있어 크로스 플랫폼은 필수적인 요소인데 이를 만족하는 것이 Obsidian이었다. 최근 모바일 앱도 나와서 쏠쏠하게 사용 중에 있는데, 이를 활용하여 Logseq + Obsidian 함께 활용하기를 보고 Logseq를 통해서도 정리해보고자 마음을 먹게 된 것이다.
그런데 글이 안보인다&amp;hellip;? icloud를 통하여 동기화시켜서 mac 환경과 windows 환경에서 모두 사용할 수 있게끔 세팅을 마쳤다.</description>
    </item>
    
    <item>
      <title>Tableau Desktop Specialist 합격 후기 (Pearson VUE 환경)</title>
      <link>https://zellyshu.github.io/posts/2021-10-30-tableau-desktop-specialist-review/</link>
      <pubDate>Sat, 30 Oct 2021 10:20:28 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-10-30-tableau-desktop-specialist-review/</guid>
      <description>Intro Tableau를 업무 중에 계속 활용하다보니 어느정도 자신감이 붙어있는 상태였다. 하지만, 프로젝트를 진행하면서 발생하는 산출물과 같은 부분은 완전히 내 것으로 남는 것 같다는 느낌이 들지 않았다. 그러던 중 자격증명 같은 거라도 있으면 그래도 Tableau 관련 업무를 하며 남은 것이 생겼다라는 느낌이 들지 않을까 싶어 Tableau Desktop Specialist를 취득하고자 생각하게 되었다.
Tableau Desktop Specialist 기존에는 LES라는 시험 플랫폼을 통해서 시험을 진행했었지만, 지금은 Pearson VUE라는 플랫폼을 통해서만 시험을 진행하고 있다. 이전에 Tableau 관련 교육을 받을 때나 자격증 관련 이야기를 들을 때 LES에서 진행되는 형태만 들어왔기 때문에 당연히 그럴 줄 알고 준비를 진행하려 했었는데 막상 결제까지 하고보니 시험 방식이 달라졌다는 것을 그 때 알게 되었다&amp;hellip;</description>
    </item>
    
    <item>
      <title>Amundsen을 Docker에 설치해보기</title>
      <link>https://zellyshu.github.io/posts/2021-10-19-docker-amundsen-installation/</link>
      <pubDate>Tue, 19 Oct 2021 16:38:57 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-10-19-docker-amundsen-installation/</guid>
      <description>Intro RSS 구독을 통하여 다양한 기술 블로그 및 회사들의 글을 읽으며 아침 일과를 시작하는 편이다. 그러던 중, 뱅크샐러드 기술 블로그에서 &#39;# 뱅크샐러드 Data Discovery Platform의 시작&#39; 이라는 글을 읽게 되었는데 갑자기 흥미가 생겨서 데이터 디스커버리 툴에 대하여 찾아보게 되었다.
Data Discovery Tool? Data Discovery Tool이란, 말 그대로 데이터의 탐색을 돕는 툴로서 여러 소스에서 데이터를 수집 및 결합하고 데이터의 패턴과 추세를 식별하는 데 도움이 되는 도구를 의미한다. BI 툴에서 많이 찾아볼 수 있다.</description>
    </item>
    
    <item>
      <title>OpenVSCode Server를 Docker에 설치해보기</title>
      <link>https://zellyshu.github.io/posts/2021-10-12-openvscode-server-docker/</link>
      <pubDate>Tue, 12 Oct 2021 15:32:51 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-10-12-openvscode-server-docker/</guid>
      <description>Intro OpenVSCode Server를 띄워두고 태블릿 PC등으로 외부접속하면 테스트 목적으로 간단하게 사용할 수 있지 않을까? 라는 생각이 갑자기 들어 Docker 환경에서 우선 설치해보기로 하였다.
OpenVSCode Server란? OpenVSCode Server란 원격 컴퓨터에서 서버를 실행하고, 웹 브라우저를 통해 접근할 수 있는 VSCode 버전을 제공하는 것으로, Micorsoft사에서 오픈소스 프로젝트로 개발하고 있다.
Installation 설치는 Docker나 Linux 환경에서 설치 가능하며, Docker 환경에서 설치를 진행하였다. 사실 명령어 하나만 입력하면 설치가 진행되므로, 오류가 안나기만을 간절히 기도하였다&amp;hellip;
docker run -it --init -p 3000:3000 -v &amp;#34;$(pwd):/home/workspace:cached&amp;#34; gitpod/openvscode-server 설치 및 설정이 완료되면 3000번 포트를 통해 접속할 수 있다.</description>
    </item>
    
    <item>
      <title>Heroku를 통한 무료 MariaDB &amp; PostgreSQL 저장소 만들기</title>
      <link>https://zellyshu.github.io/posts/2021-09-29-heroku-mariadb-postgresql/</link>
      <pubDate>Wed, 29 Sep 2021 15:41:07 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-09-29-heroku-mariadb-postgresql/</guid>
      <description>Intro 토이 프로젝트를 진행할 때 테스트 용도로 DB를 불러올 일이 종종 생겼다. 토이 프로젝트이기 때문에 정말 기본만 간단하게 구성된 DB와 연결해 몇가지 테스트만 해보면 될 상황에도 그 때 그 때 DB를 만들고 하는 건 여간 귀찮은 일이 아니었다. 그래서 최대한 무료 범위 내에서 해결하고자 알아보았고, Heroku로도 테스트 목적에는 손색이 없을 것이라 생각하여 바로 실행에 옮겼다.
DB 생성 신용카드를 등록해두면, 월 1000시간 / 500 MB 제한으로 무료 사용할 수 있다. 또한, MariaDB만 하나 구축해두려다가 PostgreSQL도 하나 더 구축해두었다.</description>
    </item>
    
    <item>
      <title>WSL2 (Win10) Ubuntu20.04에서 Docker Desktop 설치하고 Apache Superset 테스트해보기</title>
      <link>https://zellyshu.github.io/posts/2021-09-23-docker-apache-superset-installation/</link>
      <pubDate>Thu, 23 Sep 2021 11:18:21 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-09-23-docker-apache-superset-installation/</guid>
      <description>Intro WSL2를 통해 Ubuntu를 설치한 뒤 Windows 환경이라는 제약하에 못해 본 것들을 하나 둘 해보던 와중 Apache Superset이라는 오픈소스 시각화 BI툴을 설치하지 못했던 기억이 났다. Mac이나 Linux에서밖에 설치할 수 없어 Windows 환경에서는 VM 등의 가상머신을 이용할 수밖에 없었던 것으로 기억하고 있으나, WSL2의 지원 이후 Docker를 통해 설치가 가능하다는 것을 알게 되었다. 어차피 Docker도 설치해볼 겸 겸사겸사 Docker Desktop의 설치와 Apache Superset의 설치를 진행하게 되었다.
Docker 유료화 관련 정책으로 요근래 다시 시끌시끌해진 Docker를 오랜만에 다시 설치해보았다.</description>
    </item>
    
    <item>
      <title>TabPy 설치 테스트</title>
      <link>https://zellyshu.github.io/posts/2021-09-14-tabpy-intro/</link>
      <pubDate>Tue, 14 Sep 2021 10:42:13 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-09-14-tabpy-intro/</guid>
      <description>Intro 회사에서 Tableau를 사용하여 프로젝트를 진행할 일이 생기게 되면서 Tableau라는 툴에 대한 관심이 많아졌다. 데이터 시각화의 경우 D3.js와 Phthon의 라이브러리인 Seaborn 과 Matplotlib 정도만 사용해보았기에 Tableau에 적응하는 것은 매우 신선한(?) 작업이었다.
Tabpy 하지만, Tableau 프로그램에서 자체적으로 지원하는 분석 모델 및 예측 모델은 한정적이고, 속도에 대한 이슈도 존재했기 때문에 다른 방안을 알아보던 중 TabPy라는 분석 확장 프로그램을 찾게 되었다. Tableau 홈페이지에서는 TabPy에 대하여 데이터를 불러오기 전 전처리 작업이나 분석 및 예측 모델 등에 활용할 수 있다고 설명하고 있다.</description>
    </item>
    
    <item>
      <title>CentOS 7 &#43; Flask &#43; gunicorn &#43; Nginx 조합으로 Oracle Cloud에서 돌아가는 서비스 만들어보기</title>
      <link>https://zellyshu.github.io/posts/2021-06-01-flakonlpy/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-06-01-flakonlpy/</guid>
      <description>Intro 본 포스팅은 Python의 한국어 형태소 분석 라이브러리인 konlpy를 활용하여 CentOS 7 + Flask + gunicorn + Nginx 조합으로 웹 애플리케이션 서비스를 만들어본 토이 프로젝트 개발기다. 개발된 서비스는 링크(클릭)를 통하여 이동하면 사용할 수 있으나, 이용자에게 제공되는 완전하고 안정된 형태의 서비스라기보다 Oracle Cloud의 무료 티어를 활용해보기 위한 테스트 목적이 강하므로 이 점을 인지하여 준다면 감사할 것 같다. (갑자기 다운되거나 오류 발생 확률 매우매우매우 높음ㅠㅠ)
왜 만들었나? 취직하여 일을 시작한 지 얼마 되지 않았을 무렵, 사내 팀에서 AWS를 사용하고 있어 자연스레 클라우드 환경에 관심이 많아진 상태였다.</description>
    </item>
    
    <item>
      <title>IBM Cloud 가입부터 간단한 설정까지</title>
      <link>https://zellyshu.github.io/posts/2021-04-15-ibm-cloud/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-04-15-ibm-cloud/</guid>
      <description>Intro 본 포스팅은 이전 Oracle Cloud 가입과 간단한 설정에 관하여 작성했던 포스트의 IBM 버전이다. IBM Cloud의 가입과 Free Tier인 Lite 계정에서 클라우드 초심자가 개발 환경을 설정해 본 경험을 (= 미래의 내가 잊어먹지 않도록 정리해둔 것을) 다룬 것이다. 나와 같은 분들과 IBM Cloud를 처음 사용하시는 분들께 조금이나마 참고 자료로서 도움이 되었으면 하는 마음에 글을 작성하였다.
IBM Cloud란? IBM Cloud는 어디선가 한 번쯤은 들어봤을 IBM사에서 운영하는 Cloud Flatform으로, 현재 무료 티어인 Lite 계정을 지원하고 있다.</description>
    </item>
    
    <item>
      <title>FastAPI 설치 및 테스트</title>
      <link>https://zellyshu.github.io/posts/2021-04-08-fastapi-install-test/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-04-08-fastapi-install-test/</guid>
      <description>Intro 대학원 시절 기계 학습한 모델을 활용하여 데모 서비스를 만들어 시연해야 할 일이 종종 있었다.
당시, 개발한 형태소 분석기 모델을 가지고 다른 연구실처럼 웹에 형태소 분석기를 띄워 데모 형태로 서비스를 하자는 의견이 나왔고, 서비스 구현 파트를 맡게 되었다. (이 때는, input으로 입력값을 받도록 하고 개발 툴에서 run 하면 이용자도 들어와서 사용할 수 있을 거라는 발칙한 생각을 할 정도로 구조도 뭣도 아무것도 모르는 상황이었다.)
Python도 아등바등 해나갔었는데 하물며 웹 프레임워크 관련 지식은 더더욱 기초지식조차 없었던 터라 일단 Python만 가지고 서비스를 만들어야겠다 생각했다.</description>
    </item>
    
    <item>
      <title>PostgreSQL 설치 테스트 (Ubuntu 20.04, WSL2)</title>
      <link>https://zellyshu.github.io/posts/2021-04-02-postgresql-install-test/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-04-02-postgresql-install-test/</guid>
      <description>Intro MySQL, Oracle, MSSQL 등의 DB는 접해보았으나 PostgreSQL은 이야기만 들어보고 실제 사용해 본 경험은 없어서 설치하고, 테스트 목적의 테이블을 생성하고, DB를 삽입하여 조회해보는 작업을 해보았다.
PostgreSQL은 오픈 소스 객체-관계형 데이터베이스 관리 시스템(ORDBMS) 이다. 평소 관심만 가지고 있다가 추후 토이 프로젝트 시 DB를 선택할 때 PostgreSQL을 도입해보고 싶다는 막연한 생각에 맨땅에 헤딩하듯이 설치 테스르를 진행한 것이다.
DB에 조예가 깊지 않아 설치하고, 잘 돌아가는지 정도의 레벨로 테스트를 진행하였고 관련 내용을 간략하게 정리한 것임을 미리 알린다.</description>
    </item>
    
    <item>
      <title>Oracle Cloud 가입부터 간단한 설정까지</title>
      <link>https://zellyshu.github.io/posts/2021-03-31-oracle-cloud/</link>
      <pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-03-31-oracle-cloud/</guid>
      <description>Intro 본 포스팅은 Oracle Cloud 의 가입과 Free Tier에서 클라우드 초보자의 입장에서 개발 환경을 설정해 본 경험을 (= 미래의 내가 잊어먹지 않도록 정리해둔 것을) 다룬 것이다. 나와 같은 분들과 Oracle Cloud를 처음 사용하시는 분들께 조금이나마 참고 자료로서 도움이 되었으면 하는 마음에 글을 작성하였다.
Oracle Cloud란? Oracle Cloud는 어디선가 한 번쯤은 들어봤을 Oracle사에서 운영하는 Cloud Flatform으로, GCP, AWS와 비교하여 Free Tier를 2개나 지원하고 있다. 특히 Free Tier에서도 DB 2개, 컴퓨팅 VMs, 100GB 블록의 볼륨, 10GB 객체 스토리지를 제공하고 있다는 것이 특장점이다.</description>
    </item>
    
    <item>
      <title>모질라 썬더버드 사용기</title>
      <link>https://zellyshu.github.io/posts/2021-03-30-mozilla-thunderbird/</link>
      <pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zellyshu.github.io/posts/2021-03-30-mozilla-thunderbird/</guid>
      <description>직장인에게 있어 메일관리는 필수적이라 할 수 있다. 대학생 때까지야 메일 계정 하나 가지고 개인 용도로도 사용하고, 조별 과제도 하고, 대외활동도 하고 하였으나 대학원을 다니며 자연스레 개인용 계정과 업무용 계정이 분리되게 되었다.
대학원 졸업 이후 회사에 들어가니 회사 메일 계정을 받게 되고, 파견을 나가니 파견회사의 메일 계정을 또 만들게 되고&amp;hellip; 그렇게 프로젝트를 몇 개 진행하다보니 어느새 메일 계정 여러 개를 동시에 확인해야 하는 상황에 이르게 되었다.
이렇게 업무용 뿐만 아니라 개인용도까지 메일을 여러 개 사용해야 하는 경우가 생기게 되면서 하나의 플랫폼에서 확인하면 편하겠다라는 생각이 들었다.</description>
    </item>
    
  </channel>
</rss>
